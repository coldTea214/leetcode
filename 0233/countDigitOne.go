/*
以算百位上1为例子: 假设百位上是0, 1, 和 >=2 三种情况:

n=41092, m=100, a=n/m=410, b=n%m=92. 计算百位上1的个数应该为 41 *100 次: 00100-40199
n=41192, m=100, a=n/m=411, b=n%m=92. 计算百位上1的个数应该为 41 *100 + 93 次: 00100-40199 41100-41192
n=41592, m=100, a=n/m=415, b=n%m=92. 计算百位上1的个数应该为 42 *100 次: 00100-41199
以上三种情况可以用 一个公式概括: (a + 8) / 10 * m + (a % 10 == 1) * (b + 1)
*/

func countDigitOne(n int) int {
	var a, b, ones int
	m := 1
	for m <= n {
		a, b = n/m, n%m
		ones += (a + 8) / 10 * m
		if a%10 == 1 {
			ones += b + 1
		}
		m *= 10
	}
	return ones
}
